# This installs two files, openconnect-gui.exe and logo64.ico, creates a start menu shortcut, builds an uninstaller, and
# adds uninstall information to the registry for Add/Remove Programs
 
# To get started, put this script into a folder with the two files (openconnect-gui.exe, logo64.ico, and COPYING -
# You'll have to create these yourself) and run makensis on it
 
# If you change the names "openconnect-gui.exe", "logo64.ico", or "COPYING" you should do a search and replace - they
# show up in a few places.
# All the other settings can be tweaked by editing the !defines at the top of this script
!define APPNAME "OpenConnect"
!define DESCRIPTION "OpenConnect VPN client for windows"
# These three must be integers
!define VERSIONMAJOR 0
!define VERSIONMINOR 1
!define VERSIONBUILD 1
# These will be displayed by the "Click here for support information" link in "Add/Remove Programs"
# It is possible to use "mailto:" links in here to open the email client
!define HELPURL "https://github.com/nmav/openconnect-gui/issues" # "Support Information" link
!define UPDATEURL "https://github.com/nmav/openconnect-gui/wiki" # "Product Updates" link
!define ABOUTURL "https://github.com/nmav/openconnect-gui/wiki" # "Publisher" link
 
RequestExecutionLevel admin ;Require admin rights on NT6+ (When UAC is turned on)
 
InstallDir "$PROGRAMFILES\${APPNAME}"
 
# rtf or txt file - remember if it is txt, it must be in the DOS text format (\r\n)
LicenseData "../COPYING"
# This will be in the installer/uninstaller's title bar
Name "${APPNAME}"
Icon "../logo64.ico"
outFile "openconnect-installer.exe"

!include LogicLib.nsh
!include WinVer.nsh

ComponentText "Please choose one of the available options"

Section !Required
  SectionIn RO
SectionEnd
 

# defines for newer versions
!include Sections.nsh
# SECTION_OFF is defined in Sections.nsh as 0xFFFFFFFE
!define SECTION_ON ${SF_SELECTED} # 0x1

# Just three pages - license agreement, install location, and installation
page license
page directory
page instfiles
 
!macro VerifyUserIsAdmin
UserInfo::GetAccountType
pop $0
${If} $0 != "admin" ;Require admin rights on NT4+
        messageBox mb_iconstop "Administrator rights are required to install Qconnect!"
        setErrorLevel 740 ;ERROR_ELEVATION_REQUIRED
        quit
${EndIf}
!macroend
 
function .onInit
	setShellVarContext all
	!insertmacro VerifyUserIsAdmin
functionEnd
 
section "install"
	setOutPath $INSTDIR\platforms
	file "platforms\qminimal.dll"
	file "platforms\qoffscreen.dll"
	file "platforms\qwindows.dll"

	setOutPath $INSTDIR
	# Files added here should be removed by the uninstaller (see section "uninstall")
	file tap-windows.exe
	file tap-windows-xp.exe
	file vcredist_x86.exe
	file "../logo64.ico"
	file libgcc_s_dw2-1.dll
	file libgcc_s_sjlj-1.dll
	file libgmp-10.dll
	file libstoken-1.dll
	file libgnutls-30.dll
	file libp11-kit-0.dll
	file libhogweed-4-0.dll
	file libnettle-6-0.dll
	file libopenconnect-5.dll
	file libstdc++-6.dll
	file libwinpthread-1.dll
	file libxml2-2.dll
	file openconnect.exe
	file openconnect-gui.exe
	file Qt5Core.dll
	file Qt5Gui.dll
	file Qt5Network.dll
	file Qt5Widgets.dll
	file vpnc-script.js
	file zlib1.dll
	file "icudt53.dll"
	file "icuin53.dll"
	file "icuuc53.dll"


	# Add any other files for the install directory (license files, app data, etc) here
	createDirectory "$SMPROGRAMS\${APPNAME}"
	createShortCut "$SMPROGRAMS\${APPNAME}\${APPNAME}.lnk" "$INSTDIR\openconnect-gui.exe" "" "$INSTDIR\logo64.ico"
 
	# Uninstaller - See function un.onInit and section "uninstall" for configuration
	writeUninstaller "$INSTDIR\uninstall.exe"

	#createShortCut "$SMPROGRAMS\${APPNAME}\Uninstall.lnk" "$INSTDIR\uninstall.exe" "" ""

	# Start Menu
 
	# Registry information for add/remove programs
	WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${APPNAME}" "DisplayName" "${APPNAME} - ${DESCRIPTION}"
	WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${APPNAME}" "UninstallString" "$\"$INSTDIR\uninstall.exe$\""
	WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${APPNAME}" "QuietUninstallString" "$\"$INSTDIR\uninstall.exe$\" /S"
	WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${APPNAME}" "InstallLocation" "$\"$INSTDIR$\""
	WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${APPNAME}" "DisplayIcon" "$\"$INSTDIR\logo64.ico$\""
	WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${APPNAME}" "Publisher" "$\"${APPNAME}$\""
	WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${APPNAME}" "HelpLink" "$\"${HELPURL}$\""
	#WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${APPNAME}" "URLUpdateInfo" "$\"${UPDATEURL}$\""
	WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${APPNAME}" "URLInfoAbout" "$\"${ABOUTURL}$\""
	WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${APPNAME}" "DisplayVersion" "$\"${VERSIONMAJOR}.${VERSIONMINOR}.${VERSIONBUILD}$\""
	WriteRegDWORD HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${APPNAME}" "VersionMajor" ${VERSIONMAJOR}
	WriteRegDWORD HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${APPNAME}" "VersionMinor" ${VERSIONMINOR}
	# There is no option for modifying or repairing the install
	WriteRegDWORD HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${APPNAME}" "NoModify" 1
	WriteRegDWORD HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${APPNAME}" "NoRepair" 1
	# Set the INSTALLSIZE constant (!defined at the top of this script) so Add/Remove Programs can accurately report the size
	#WriteRegDWORD HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${APPNAME}" "EstimatedSize" ${INSTALLSIZE}

	ExecWait '"$INSTDIR\vcredist_x86.exe"  /passive /norestart'
sectionEnd

Section Required
  SectionIn RO
SectionEnd

Section "Windows TAP/TUN driver"
 SectionIn RO
 
${If} ${AtLeastWin2003}
 DetailPrint "Running TAP/TUN driver setup..."
 ExecWait "$INSTDIR\tap-windows.exe"
${Else}
 DetailPrint "Running TAP/TUN XP driver setup..."
 ExecWait "$INSTDIR\tap-windows-xp.exe"
${EndIf}
 DetailPrint "Finished driver setup"
SectionEnd

# Uninstaller
 
function un.onInit
	SetShellVarContext all
 
	#Verify the uninstaller - last chance to back out
	MessageBox MB_OKCANCEL "Permanently remove ${APPNAME}?" IDOK next
		Abort
	next:
	!insertmacro VerifyUserIsAdmin
functionEnd
 
section "uninstall"
 
	# Remove Start Menu launcher
	# Try to remove the Start Menu folder - this will only happen if it is empty

	delete "$SMPROGRAMS\${APPNAME}\${APPNAME}.lnk"
	#delete "$SMPROGRAMS\${APPNAME}\Uninstall.lnk"
	# Try to remove the Start Menu folder - this will only happen if it is empty
	rmDir "$SMPROGRAMS\${APPNAME}" 

	# Remove files
	delete $INSTDIR\tap-windows.exe
	delete $INSTDIR\tap-windows-xp.exe
	delete $INSTDIR\vcredist_x86.exe
	delete $INSTDIR\logo64.ico
	delete $INSTDIR\icudt53.dll
	delete $INSTDIR\icuin53.dll
	delete $INSTDIR\icuuc53.dll
	delete $INSTDIR\libstoken-1.dll
	delete $INSTDIR\libgcc_s_dw2-1.dll
	delete $INSTDIR\libgcc_s_sjlj-1.dll
	delete $INSTDIR\libgmp-10.dll
	delete $INSTDIR\libp11-kit-0.dll
	delete $INSTDIR\libgnutls-30.dll
	delete $INSTDIR\libhogweed-4-0.dll
	delete $INSTDIR\libnettle-6-0.dll
	delete $INSTDIR\libopenconnect-5.dll
	delete $INSTDIR\libstdc++-6.dll
	delete $INSTDIR\libwinpthread-1.dll
	delete $INSTDIR\libxml2-2.dll
	delete $INSTDIR\openconnect.exe
	delete $INSTDIR\openconnect-gui.exe
	delete $INSTDIR\Qt5Core.dll
	delete $INSTDIR\Qt5Gui.dll
	delete $INSTDIR\Qt5Network.dll
	delete $INSTDIR\Qt5Widgets.dll
	delete $INSTDIR\vpnc-script.js
	delete $INSTDIR\zlib1.dll
	delete $INSTDIR\platforms\qminimal.dll
	delete $INSTDIR\platforms\qoffscreen.dll
	delete $INSTDIR\platforms\qwindows.dll
	rmDir $INSTDIR\platforms
 
	# Always delete "uninstaller as the last action
	delete $INSTDIR\uninstall.exe
 
	# Try to remove the install directory - this will only happen if it is empty
	rmDir $INSTDIR
 
	# Remove uninstaller information from the registry
	DeleteRegKey HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${APPNAME}"
sectionEnd
